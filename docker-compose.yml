version: '3.8'
services:

  api:
    build:
      context: .
    depends_on:
      - database
    restart: always
    deploy:
      replicas: 1
    ports:
      - "8000:8000"
    volumes:
      - .:/code/
    command: ["bash", "-c", "alembic upgrade head && gunicorn -c settings/gunicorn.conf.py app.main:app"]
    env_file:
      - .env


  database:
    restart: always
    image: postgres:16-alpine
    volumes:
      - pg-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U application"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: application
      POSTGRES_PASSWORD: secret_pass
      POSTGRES_DB: application
    env_file:
      - .env

  # worker-beat:
  #   build: 
  #     context: .
  #   command: celery -A app.currency.tasks.celery_app beat --loglevel=info
  #   volumes:
  #     - .:/usr/src/app
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@database:5432/postgres?sslmode=disable
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - api
  #     - redis
  #   env_file:
  #     - .env

  # worker-worker:
  #   build: 
  #     context: .
  #   command: celery -A app.currency.worker.celery_app worker --loglevel=info
  #   volumes:
  #     - .:/usr/src/app
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@database:5432/postgres?sslmode=disable
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - api
  #     - database
  #     - redis
  #   env_file:
  #     - .env

  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   env_file:
  #     - .env

volumes:
  pg-data:
    driver: local
